// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("USER")
  plan          String    @default("FREE")
  tokenLimit    Int       @default(1000)
  tokensUsed    Int       @default(0)
  stripeCustomerId String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts      Account[]
  sessions      Session[]
  apiKeys       ApiKey[]
  usageRecords  UsageRecord[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ApiKey {
  id        String   @id @default(cuid())
  key       String   @unique
  name      String   @default("Default API Key")
  userId    String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  lastUsed  DateTime?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UsageRecord {
  id        String   @id @default(cuid())
  userId    String
  tokens    Int
  endpoint  String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Note: Using String instead of enums due to SQLite limitations
// Valid Role values: "USER", "ADMIN"
// Valid Plan values: "FREE", "MONTHLY", "YEARLY" 