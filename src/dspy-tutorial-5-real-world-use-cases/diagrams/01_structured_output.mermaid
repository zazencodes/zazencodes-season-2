---
config:
  theme: redux-dark
---
flowchart TD
 subgraph s1["Pre-setup"]
        S1["Load .env → OPENAI_API_KEY"]
        S2["Configure DSPy<br>• GPT-4o-mini<br>• SQLite cache<br>• temperature 0.1"]
  end
 subgraph subGraph1["Email Processing Loop"]
        A["Sample email (raw text)"]
        B{"process_email_safely()"}
        C1["extract_ticket<br>(DSPy Predict<br>SupportEmail Signature)"]
        D1["Prediction object<br>(priority, product, etc.)"]
        V["validate_extraction()"]
        D2["Lower confidence"]
        R["enhance_with_business_rules()<br>VIP/security rules"]
        P["Enhanced prediction"]
        O["Structured dict<br>{email_id, extraction, validation}"]
  end
    A --> B
    B --> C1
    C1 --> D1
    D1 --> V & R
    V -- pass --> D1
    V -- fail --> D2
    R --> P
    P --> O
    O --> Res["results list"]
    Res --> Stats["Downstream analysis<br>High/Urgent &amp; Negative tickets"]
     S1:::setup
     S2:::setup
     A:::extract
     B:::decision
     C1:::extract
     D1:::extract
     V:::validate
     D2:::validate
     R:::business
     P:::business
     O:::structure
     Res:::summary
     Stats:::summary
    classDef setup     fill:#FFECB3,stroke:#333,stroke-width:1px,color:#000
    classDef extract   fill:#BBDEFB,stroke:#333,stroke-width:1px,color:#000
    classDef validate  fill:#C8E6C9,stroke:#333,stroke-width:1px,color:#000
    classDef business  fill:#FFE0B2,stroke:#333,stroke-width:1px,color:#000
    classDef structure fill:#E0F7FA,stroke:#333,stroke-width:1px,color:#000
    classDef summary   fill:#D1C4E9,stroke:#333,stroke-width:1px,color:#000
    classDef decision  fill:#E0E0E0,stroke:#333,stroke-width:1px,color:#000
