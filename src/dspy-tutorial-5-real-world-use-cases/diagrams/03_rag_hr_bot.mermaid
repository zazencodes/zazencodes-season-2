---
config:
  theme: redux-dark
---
flowchart TD
  subgraph "Question Handling"
    Q["Employee question"]
    Q --> R1["retrieval_system.search()"]
    R1 --> Ctx["Top-k docs<br>build context"]
    Ctx --> Gen["ChainOfThought<br>answer generation"]
    Gen --> Pred["Prediction<br>(answer, sources, confidence)"]
  end
  Pred --> EvalA["evaluate_answer_quality()"]
  Pred --> EvalR["evaluate_retrieval_quality()"]
  EvalA --> Res["individual_results list"]
  EvalR --> Res
  Res --> Summ["Summary metrics"]
  Summ --> OptDemo["demonstrate_optimization_potential()"]
  classDef setup       fill:#FFECB3,stroke:#333,stroke-width:1px,color:#000
  classDef define      fill:#F5F5F5,stroke:#333,stroke-width:1px,color:#000
  classDef question    fill:#FFFFFF,stroke:#333,stroke-width:1px,color:#000
  classDef retrieval   fill:#BBDEFB,stroke:#333,stroke-width:1px,color:#000
  classDef generation  fill:#FFE0B2,stroke:#333,stroke-width:1px,color:#000
  classDef evaluation  fill:#D1C4E9,stroke:#333,stroke-width:1px,color:#000
  classDef results     fill:#E0F7FA,stroke:#333,stroke-width:1px,color:#000
  classDef summary     fill:#B2DFDB,stroke:#333,stroke-width:1px,color:#000
  classDef optimize    fill:#FFCCBC,stroke:#333,stroke-width:1px,color:#000
  class S1,S2 setup
  class D1,D2,D3,D4,D5,D6 define
  class Q question
  class R1,Ctx retrieval
  class Gen,Pred generation
  class EvalA,EvalR evaluation
  class Res results
  class Summ summary
  class OptDemo optimize
