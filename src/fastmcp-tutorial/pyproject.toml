[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastmcp-tutorial"
version = "1.0.0"
description = "A comprehensive FastMCP 2.0 tutorial server with tools, resources, and prompts"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
maintainers = [
    { name = "Your Name", email = "your.email@example.com" }
]
keywords = [
    "mcp",
    "fastmcp", 
    "model-context-protocol",
    "ai",
    "llm",
    "claude",
    "anthropic",
    "tutorial"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.12"
dependencies = [
    "fastmcp>=2.5.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/fastmcp-tutorial"
Repository = "https://github.com/yourusername/fastmcp-tutorial"
Documentation = "https://github.com/yourusername/fastmcp-tutorial#readme"
"Bug Reports" = "https://github.com/yourusername/fastmcp-tutorial/issues"

[project.scripts]
fastmcp-tutorial = "fastmcp_tutorial.cli:main"
fastmcp-tutorial-test = "fastmcp_tutorial.test:run_tests"

[tool.hatch.build.targets.wheel]
packages = ["src/fastmcp_tutorial"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "README.md",
    "LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.isort]
known-first-party = ["fastmcp_tutorial"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]